apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "26.0.0"
    defaultConfig {
        applicationId "com.hedzr.mobile.multi_channel_demo"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'armeabi-v8a','x86', 'x86_64', 'mips', 'mips64'
        }

        // dex突破65535的限制
        multiDexEnabled true

        manifestPlaceholders = [
                JPUSH_PKGNAME : applicationId,
                JPUSH_APPKEY : "81d542c7eb5c3d6766ad8c15", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
                UMENG_CHANNEL_VALUE: "umeng",
                APP_CHANNEL_VALUE: "defaults",
        ]
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    signingConfigs {
        sign
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.sign
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outPutApkName = "${project.name}-${variant.flavorName}-v${defaultConfig.versionName}"
                    if (output.outputFile != null && output.outputFile.name.endsWith('.apk')
                            && 'release'.equals(variant.buildType.name)) {
                        outPutApkName = "${outPutApkName}-release.apk"
                    }
                    if (output.outputFile != null && output.outputFile.name.endsWith('.apk')
                            && 'debug'.equals(variant.buildType.name)) {
                        outPutApkName = "${outPutApkName}-debug.apk"
                    }
                    output.outputFile = new File(output.outputFile.parent, outPutApkName)
                }
            }
        }
    }

    // Build all channels:
    //   gradle assembleRelease
    // Build a single channel:
    //   gradle assembleWandoujiaRelease
    //   gradle assembleWandoujia
    productFlavors {
        defaults {}
        yinyongbao {}
        xiaomi {}
        qh360 {}
        baidu {}
        wandoujia {}
    }

    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [
                UMENG_CHANNEL_VALUE: name,
                JPUSH_CHANNEL_VALUE: name,
                APP_CHANNEL_VALUE: name,
        ]
    }

}


def ksFile = rootProject.file('local.properties')
def props = new Properties();
if (ksFile.canRead()) {
    props.load(new FileInputStream(ksFile))
    if (props != null) {
        android.signingConfigs.sign.storeFile file(props['KEYSTORE_FILE'])
        android.signingConfigs.sign.storePassword props['KEYSTORE_PASSWORD']
        android.signingConfigs.sign.keyAlias props['KEYSTORE_ALIAS']
        android.signingConfigs.sign.keyPassword props['KEYSTORE_ALIAS_PASSWORD']
    } else {
        println 'some entries in \'local.properties\' not found!'
    }
} else {
    println '\'local.properties\' not found!'
}

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'

    compile 'cn.jiguang.sdk:jpush:3.0.5'
    compile 'cn.jiguang.sdk:jcore:1.1.2'
    compile 'com.umeng.analytics:analytics:latest.integration'

}
